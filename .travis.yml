# The language in this case has no bearing - we are going to be making use of conda for a
# python distribution for the scientific python stack.
language: python

sudo: false

env:
    global:
       - CONDA_INSTALL_LOCN="${HOME}/conda"
       # Secure BINSTAR_TOKEN for SciTools/conda-build-all which can write to Obvious-CI-tests
       - secure: BSZXGROp6nn3YrE9aHJFLTYZS+sTbocs8RQ6dxJDYLbDmkIuglBFwTQyscUrN8esB8Wj1iVdgF4CfSTYQkD3qXbkaYS2wcW7mYVQqzpuvJHvM/bPxGaSjiXRfgamQAmVF5dYERzgAYtJcqDyhm34lsnljXFEURc1YVyTxmD9MllxlJzE5fkC2HFS4ajAOdRE2OUjxR1ApHbvxYzJJX9Wwj230wykV1zfumjUMwhtZFke+f5TePEbNKTPpbltZ0SLxUmiPfb4FYbUmfx2mRNL95177L+wCN2SI2xD7ulU+MnYKeqGB1K4/+F7OKixaLQ5qOO1R/7dU1P0lCQphruto//oWMyBpAvSZRvl+i6iaCwhIcjl10wiz4ZAPquIqV/maRVCu9zh5ISrWoLI2enkzBvXtkBifxTWE3hxtgVMlFJx9RrQ/dBMLMPzjLyTADG7XednmUuVXEQhDKQJYB3ZShxOdyHw1D//fPN/VbOWMbXLRPhEmpda9kp5oJTS8Xli733GBsEhv8bnQugznFTbfirN9IN/WXoM4sOT2E4ZsgPBDu9xtwQeBYfnfRoIsKnQAA/eroLUJhTeYkb3On5ftaBLs2YOtEA4NsDI3nXD2fk4XvEqbEJNAo/Z0VvIZYWNR5oYUA5O3o2044/OWdjjTiu3c422Ow/MYN4jwAe8sDo=
       # Secure BINSTAR_TOKEN for pelson/conda-build-all which can write to Obvious-CI-tests
       - secure: Dz1ZWH583kXz725IUSU32en048qGnweQZqrONg9CmDZuBwb3hE6CZ/qpXlKxLD6pqrV1fRJLxhoJo+7wS828GVdg5nfGdw1TyJdSsIDVjXjVMKRGx4fJagodE83E1sjBgyFrh7z/giHmT65+mExS4lzGBM56fOoVrNk2+WTF31xsPAMimF1qLvNA9vBpOExjpxaugFaZwRdhWqYMHT2RtLUnFPjtOWvj0Q0MlLUjoXznTRTl6YLN2jyRbEg42R62goXgp6hAVQ7Dn/OfV4ax8pofiStwmMSFdyfx3Y60xEGAwopO5DzYNVqwO4t2lvoIq9jkQH3RQCtNjEZ8KcewuLym+RapRcidAwUwhaW3K7IDqbiSmaD5x6wgwZripfl+LHcWgXup0gK/eYVwrVh3hsa6ATwpc7/qMMSR1AEhHooUv6bNzASSeZmiBh/2gvq7Kob+WAa+RgwdCc1wOGsmWdicvLWSTwvnriHDrUYqS/uixV5A7C+o8VsnQC2Lcx24pO50NBhSSBpp73yHNmaQIwwEmxDEBUiFqtYz/V0peck+UQMHi+sgR/V8xB2dVQiyxaZI3/UAGtBqf3qtOGRiLQ3kFW8DAbi/2t19xk8c0FLf17ELTxURiFjTPQ78qmDDaI6MmK2bhi9IjTFBLLJU4m2ziW2l0MrTm4w3dwU7kls=
    matrix:
        - PYTHON=2.7
        - PYTHON=3.4
        - PYTHON=3.5
          CONDA_BUILD_ALL_TEST_ANACONDA_CLOUD=1

install:
    - mkdir -p ${HOME}/cache/pkgs
    - "[ ! -f ${HOME}/cache/miniconda.sh ] && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ${HOME}/cache/miniconda.sh || :"
    - bash ${HOME}/cache/miniconda.sh -b -p ${CONDA_INSTALL_LOCN} && export PATH=${CONDA_INSTALL_LOCN}/bin:$PATH

    # Re-use the pacakges in the cache, and download any new ones into that location.
    - rm -rf ${CONDA_INSTALL_LOCN}/pkgs && ln -s ${HOME}/cache/pkgs ${CONDA_INSTALL_LOCN}/pkgs

    # Disable integration (not unit) testing if there is no BINSTAR_TOKEN defined.
    - if [ -z "$BINSTAR_TOKEN"  -a -n "$CONDA_BUILD_ALL_TEST_ANACONDA_CLOUD" ]; then
         echo "BINSTAR_TOKEN is not defined, some of the intergation tests have been disabled. These will be re-enabled when merged." &&
         export CONDA_BUILD_ALL_TEST_ANACONDA_CLOUD=0;
      fi 

    # Now do the things we need to do to install it.
    - conda install --file requirements.txt nose mock python=${PYTHON} --yes --quiet
    - python setup.py install
    - mkdir not_the_source_root && cd not_the_source_root

script:
    - nosetests conda_build_all


# We store the files that are downloaded from continuum.io, but not the environments that are created.
cache:
    directories:
      - $HOME/cache
before_cache:
  # Remove all untarred directories.
  - find $CONDA_INSTALL_LOCN/pkgs/ -mindepth 1 -maxdepth 1 -type d -exec rm -r {} \;
